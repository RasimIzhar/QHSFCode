//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAL.DbEntities
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class vt_QSFHEntities : DbContext
    {
        public vt_QSFHEntities()
            : base("name=vt_QSFHEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<JobDetailsDynamicField> JobDetailsDynamicFields { get; set; }
        public virtual DbSet<JobDetailsStatic> JobDetailsStatics { get; set; }
        public virtual DbSet<UserRole> UserRoles { get; set; }
        public virtual DbSet<Vt_Customers> Vt_Customers { get; set; }
        public virtual DbSet<Vt_DynamicFields> Vt_DynamicFields { get; set; }
        public virtual DbSet<Vt_DynamicFieldsValues> Vt_DynamicFieldsValues { get; set; }
        public virtual DbSet<Vt_JobDetails> Vt_JobDetails { get; set; }
        public virtual DbSet<Vt_PriceList> Vt_PriceList { get; set; }
        public virtual DbSet<Vt_Products> Vt_Products { get; set; }
        public virtual DbSet<Vt_ProductsStages> Vt_ProductsStages { get; set; }
        public virtual DbSet<vt_Tabs> vt_Tabs { get; set; }
        public virtual DbSet<Vt_Users> Vt_Users { get; set; }
        public virtual DbSet<vt_ProductUnit> vt_ProductUnit { get; set; }
        public virtual DbSet<Vt_JobEstimation> Vt_JobEstimation { get; set; }
        public virtual DbSet<Vt_JobEstimationDetails> Vt_JobEstimationDetails { get; set; }
        public virtual DbSet<Vt_JobDrafting_Checker_Questions> Vt_JobDrafting_Checker_Questions { get; set; }
        public virtual DbSet<Vt_JobDrafting_Drafter_Questions> Vt_JobDrafting_Drafter_Questions { get; set; }
        public virtual DbSet<Vt_JobDrafting_Drafter_SubQuestions> Vt_JobDrafting_Drafter_SubQuestions { get; set; }
        public virtual DbSet<Vt_JobDrafting> Vt_JobDrafting { get; set; }
        public virtual DbSet<Vt_JobDrafting_Drafter_Checklist> Vt_JobDrafting_Drafter_Checklist { get; set; }
        public virtual DbSet<Vt_JobDrafting_Checker_Checklist> Vt_JobDrafting_Checker_Checklist { get; set; }
        public virtual DbSet<Vt_ManufacturingOrderDetails> Vt_ManufacturingOrderDetails { get; set; }
        public virtual DbSet<vt_Roles> vt_Roles { get; set; }
        public virtual DbSet<Research> Researches { get; set; }
        public virtual DbSet<Vt_Jobs> Vt_Jobs { get; set; }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    }
}
